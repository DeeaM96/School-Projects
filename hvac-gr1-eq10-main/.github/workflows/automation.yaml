on : [push, pull_request]

jobs:
  unit_test:
    name : unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Unit test
        run: |
          pytest


  build_and_push_to_Docker:
    name : build and push Docker
    needs: unit_test
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main') && (github.event_name == 'push') && (success()) }}
    steps:
      - name: Get Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            davidolivierbouchardets/hvac-container:${{ steps.date.outputs.date }}
            davidolivierbouchardets/hvac-container:latest

  deploy_cd:
    name: deploy_cd_pipeline
    needs: [unit_test, build_and_push_to_Docker]
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main') && (github.event_name == 'push') && (success()) }}
    steps:
      - uses: actions/checkout@v3

      - name: delete old deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: delete deployment hvac-deployment


      - name: create and apply new deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./.github/kube-config.yaml
